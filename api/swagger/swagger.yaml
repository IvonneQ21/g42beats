
swagger: "2.0"
info:
  version: "0.0.1"
  title: g42beats
# during dev, should point to your local machine
host: "localhost:10010"
# basePath prefixes all resource paths
basePath: "/"
#
schemes:
  # tip: remove http to make production-grade
- "http"
  # - https
# format of bodies a client can send (Content-Type)
consumes:
- application/json
# format of the responses to the client (Accepts)
produces:
- application/json
paths:
  /users/{id}:
    get:
      description: Returns a user name based on the specific id. The user must be authorized to access.
      operationId: getUserById
      produces: 
      - application/json
      parameters:
      - name: id
        in: path
        description: user name with given id to fetch
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: Users response
          schema: 
            $ref: "#/definitions/user_name"
        default:  
          description: unexpected error
          schema:
            $ref: "#/definitions/errorModel"
            
  /users:
    x-swagger-router-controller: createNewUser
    post:
      description: Creates a new user in the users list.
      operationId: createUser
      produces: 
        - application/json
      parameters:
      - name: newUser
        in: body
        description: Adds new user to database.
        required: true
        # type: object
        schema:
          $ref: "#/definitions/adduser"
      responses:
        "200":
          description: New user response
          schema: 
            $ref: "#/definitions/adduser"
        default:  
          description: unexpected error
          schema:
            $ref: "#/definitions/errorModel"
            
      
  /users/{id}/playlist:
    x-swagger-router-controller: userPersonalPlaylist
    get:
      description: Returns the list of songs that belong to a user with the specified id.
      operationId: getUserPlaylistByUserId
      produces: 
      - application/json
      parameters:
      - name: id
        in: path
        description: Fetch playlist with songs associated with signed in user id.
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: Users response
          schema: 
            $ref: "#/definitions/playlist"
        default:  
          description: unexpected error
          schema:
            $ref: "#/definitions/errorModel"
            
  /groups/{gid}/{id}/playlist:
    x-swagger-router-controller: userPlaylistByUserId
    get:
      description: Returns the all the songs associated with a user in a group that the signed in user is a part of. The id is associated with the user whose playlist we are seeing. 
      operationId: getUserPlaylistByGroupIdandUserId
      produces: 
      - application/json
      parameters: 
      - name: gid
        in: path 
        description: Produces an a list of users in the given group.
        required: true
        type: integer
        format: int64
      - name: id
        in: path
        description: Fetches the user associated with given user id.
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: Users response
          schema: 
            $ref: "#/definitions/playlist"
        default:  
          description: unexpected error
          schema:
            $ref: "#/definitions/errorModel"
            
definitions:
  adduser:
    type: object
    required:
    - user_name
    - password
    - group_name
    properties:
      user_name:
        type: "string"
      password:
        type: "string"
      group_name: 
        type: "string"
  user_name:
    type: string
    required:
    - username
    properties:
      username:
        type: string
  playlist:
    required:
    - songs
    properties:
      songs:
        type: array
        items:
          $ref: '#/definitions/song'
  song:
    type: object
    required:
    - songid
    - userid
    - songName
    - artistname
    properties:
      songid:
        type: integer
        description: This id is associated with a particular song
      userid: 
        type: integer 
        description: This id is associated with a particular user
      songName:
        type: string
        description: The name of the song
      artistname:  
        type: string
        description: Artist name
  errorModel:
    type: object
    required:
    - code
    - message
    properties:
      code:
        type: integer
        format: int64
      message:
        type: string      
