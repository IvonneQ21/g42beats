---
swagger: "2.0"
info:
  version: "0.0.1"
  title: "g42beats"
host: "localhost:10010"
basePath: "/"
schemes:
- "http"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /users/{id}:
    get:
      description: "Returns a user name based on the specific id. The user must be\
        \ authorized to access."
      operationId: "getUserById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "user name with given id to fetch"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Users response"
          schema:
            $ref: "#/definitions/user_name"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-swagger-router-controller: "Default"
  /users:
    post:
      description: "Creates a new user in the users list."
      operationId: "createUser"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "newUser"
        description: "Adds new user to database."
        required: true
        schema:
          $ref: "#/definitions/adduser"
      responses:
        200:
          description: "New user response"
          schema:
            $ref: "#/definitions/adduser"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-swagger-router-controller: "Default"
    x-swagger-router-controller: "createNewUser"
  /users/{id}/playlist:
    get:
      description: "Returns the list of songs that belong to a user with the specified\
        \ id."
      operationId: "getUserPlaylistByUserId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Fetch playlist with songs associated with signed in user id."
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Users response"
          schema:
            $ref: "#/definitions/playlist"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-swagger-router-controller: "Default"
    x-swagger-router-controller: "userPersonalPlaylist"
  /groups/{gid}/{id}/playlist:
    get:
      description: "Returns the all the songs associated with a user in a group that\
        \ the signed in user is a part of. The id is associated with the user whose\
        \ playlist we are seeing."
      operationId: "getUserPlaylistByGroupIdandUserId"
      produces:
      - "application/json"
      parameters:
      - name: "gid"
        in: "path"
        description: "Produces an a list of users in the given group."
        required: true
        type: "integer"
        format: "int64"
      - name: "id"
        in: "path"
        description: "Fetches the user associated with given user id."
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Users response"
          schema:
            $ref: "#/definitions/playlist"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-swagger-router-controller: "Default"
    x-swagger-router-controller: "userPlaylistByUserId"
  /groups/{gid}/users:
    get:
      description: "Gets all users that belong to a certain group."
      operationId: "getUsersInGroup"
      produces:
      - "application/json"
      parameters:
      - name: "gid"
        in: "path"
        description: "Return a group associated with that id"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Got array of users in group"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/user"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-swagger-router-controller: "Default"
    x-swagger-router-controller: "groupUsers"
  /groups/{gid}/users/{id}:
    get:
      description: "Gets an individual user that belongs to a certain group."
      operationId: "getSingleUserInGroup"
      produces:
      - "application/json"
      parameters:
      - name: "gid"
        in: "path"
        description: "Return a group associated with that id"
        required: true
        type: "integer"
        format: "int64"
      - name: "id"
        in: "path"
        description: "Return an individual associated with that id"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Got individual user"
          schema:
            $ref: "#/definitions/user"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-swagger-router-controller: "Default"
    delete:
      description: "Delete an individual user that belongs to a certain group."
      operationId: "deleteSingleUserInGroup"
      produces:
      - "application/json"
      parameters:
      - name: "gid"
        in: "path"
        description: "Return a group associated with that id"
        required: true
        type: "integer"
        format: "int64"
      - name: "id"
        in: "path"
        description: "Return an individual associated with that id"
        required: true
        type: "integer"
        format: "int64"
      responses:
        204:
          description: "Users deleted"
          schema:
            $ref: "#/definitions/user"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-swagger-router-controller: "Default"
    x-swagger-router-controller: "groupUser"
  /users/{id}/groups:
    get:
      description: "Gets all groups that belong to a certain user."
      operationId: "getGroupsPerUser"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Returns a user associated with that id"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Got array of groups that belong to user"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/groupName"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-swagger-router-controller: "Default"
    x-swagger-router-controller: "userGroups"
  /groups/{gid}/playlist:
    get:
      description: "Gets compiled playlist for group selected."
      operationId: "getGroupCompiledPlaylist"
      produces:
      - "application/json"
      parameters:
      - name: "gid"
        in: "path"
        description: "Return a group associated with that id"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Got compiled group playlist"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/song"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-swagger-router-controller: "Default"
    x-swagger-router-controller: "compiledPlaylist"
  /users/{id}/playlist/songs:
    put:
      description: "Add a song to authorized user's personal playlist."
      operationId: "addSong"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Return an individual associated with that id"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "song"
        description: "Name of song with artist user wants to add"
        required: true
        schema:
          $ref: "#/definitions/addsong"
      responses:
        200:
          description: "Added song"
          schema:
            $ref: "#/definitions/addsong"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-swagger-router-controller: "Default"
    x-swagger-router-controller: "addSong"
  /users/{id}/playlist/songs/{sid}:
    delete:
      description: "Delete a song to authorized user's personal playlist."
      operationId: "deleteSong"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Return an individual associated with that id"
        required: true
        type: "integer"
        format: "int64"
      - name: "sid"
        in: "path"
        description: "Id associated with song selected"
        required: true
        type: "integer"
        format: "int64"
      responses:
        204:
          description: "Got individual user"
          schema:
            $ref: "#/definitions/song"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-swagger-router-controller: "Default"
    x-swagger-router-controller: "deleteSong"
  /g42/login:
    post:
      description: "User authentication via sign-in."
      operationId: "userSignIn"
      parameters:
      - in: "body"
        name: "user_name"
        description: "Username of user trying to log-in"
        required: true
        schema:
          $ref: "#/definitions/user_name"
      responses:
        200:
          description: "Logged in successfully"
          schema:
            $ref: "#/definitions/user_name"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-swagger-router-controller: "Default"
    x-swagger-router-controller: "login"
definitions:
  user:
    type: "object"
    required:
    - "created_at"
    - "password"
    - "updated_at"
    - "user_id"
    - "user_name"
    properties:
      user_id:
        type: "integer"
      user_name:
        type: "string"
      password:
        type: "string"
      created_at:
        type: "string"
      updated_at:
        type: "string"
  groupName:
    type: "object"
    required:
    - "group_name"
    properties:
      group_name:
        type: "string"
  song:
    type: "object"
    required:
    - "artistname"
    - "songid"
    - "songname"
    - "userid"
    properties:
      songid:
        type: "integer"
        format: "int64"
      userid:
        type: "integer"
        format: "int64"
      songname:
        type: "string"
      artistname:
        type: "string"
  addsong:
    type: "object"
    required:
    - "song"
    - "userid"
    properties:
      userid:
        type: "integer"
        format: "int64"
      song:
        type: "string"
  adduser:
    type: "object"
    required:
    - "group_name"
    - "password"
    - "user_name"
    properties:
      user_name:
        type: "string"
      password:
        type: "string"
      group_name:
        type: "string"
  user_name:
    type: "string"
    required:
    - "username"
    properties:
      username:
        type: "string"
  playlist:
    required:
    - "songs"
    properties:
      songs:
        type: "array"
        items:
          $ref: "#/definitions/song"
  errorModel:
    type: "object"
    required:
    - "code"
    - "message"
    properties:
      code:
        type: "integer"
        format: "int64"
      message:
        type: "string"
